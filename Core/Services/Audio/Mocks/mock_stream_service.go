// Code generated by MockGen. DO NOT EDIT.
// Source: streamService.go
//
// Generated by this command:
//
//	mockgen --source=streamService.go --destination=./Mocks/mock_stream_service.go
//

// Package mock_audio is a generated GoMock package.
package mock_audio

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStreamService is a mock of StreamService interface.
type MockStreamService struct {
	ctrl     *gomock.Controller
	recorder *MockStreamServiceMockRecorder
}

// MockStreamServiceMockRecorder is the mock recorder for MockStreamService.
type MockStreamServiceMockRecorder struct {
	mock *MockStreamService
}

// NewMockStreamService creates a new mock instance.
func NewMockStreamService(ctrl *gomock.Controller) *MockStreamService {
	mock := &MockStreamService{ctrl: ctrl}
	mock.recorder = &MockStreamServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamService) EXPECT() *MockStreamServiceMockRecorder {
	return m.recorder
}

// GetAudioStream mocks base method.
func (m *MockStreamService) GetAudioStream(url string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAudioStream", url)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAudioStream indicates an expected call of GetAudioStream.
func (mr *MockStreamServiceMockRecorder) GetAudioStream(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAudioStream", reflect.TypeOf((*MockStreamService)(nil).GetAudioStream), url)
}
